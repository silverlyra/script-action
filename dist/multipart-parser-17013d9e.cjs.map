{"version":3,"file":"multipart-parser-17013d9e.cjs","sources":["../node_modules/node-fetch/src/utils/multipart-parser.js"],"sourcesContent":["import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n"],"names":["s","S","f","F","LF","CR","SPACE","HYPHEN","COLON","A","Z","lower","c","noop","MultipartParser","boundary","ui8a","i","data","length_","previousIndex","lookbehind","boundaryChars","index","state","flags","boundaryLength","boundaryEnd","bufferLength","cl","mark","name","clear","callback","callbackSymbol","start","end","dataCallback","markSymbol","_lookbehind","_fileName","headerValue","m","match","filename","code","toFormData","Body","ct","parser","headerField","entryValue","entryName","contentType","entryChunks","formData","FormData","onPartData","decoder","appendToFile","appendFileToFormData","file","File","appendEntryToFormData","chunk"],"mappings":"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","x_google_ignoreList":[0]}